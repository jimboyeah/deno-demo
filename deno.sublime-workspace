{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"hard",
				"hard-light\t(svg.md)"
			],
			[
				"g",
				"知识付费时代-gitchat/"
			],
			[
				"dra",
				"draw/"
			],
			[
				"loca",
				"location\t(csharp.md)"
			],
			[
				"repos",
				"repository\t(csharp.md)"
			],
			[
				"fle",
				"flex"
			],
			[
				"json",
				"json_encode"
			],
			[
				"print",
				"printer_abort"
			],
			[
				"JSON",
				"json_encode"
			],
			[
				"FILE",
				"_FILES"
			],
			[
				"n",
				"node_modules/"
			],
			[
				"value",
				"value4\tlet"
			],
			[
				"con",
				"console\tvar"
			],
			[
				"LogL",
				"LogLevelStrings\ttype"
			],
			[
				"par",
				"parseInt\tfunction"
			],
			[
				"resu",
				"result2\tlet"
			],
			[
				"Par",
				"Partial\ttype"
			],
			[
				"ReactRou",
				"ReactRouterDOM"
			],
			[
				"ne",
				"nextPuzzle"
			],
			[
				"max",
				"max-width\tproperty"
			],
			[
				"word",
				"wordlist"
			],
			[
				"qml",
				"main.qml"
			],
			[
				"p",
				"plugins/"
			],
			[
				"img",
				"imageMat"
			],
			[
				"lena",
				"lena_thresh"
			],
			[
				"chapp",
				"ch_app.erl"
			],
			[
				"wxMen",
				"wxMenuBar"
			],
			[
				"create",
				"create_test_menu"
			],
			[
				"ge",
				"GenerateNames"
			],
			[
				"I",
				"IsStatic"
			],
			[
				"lo",
				"localhost.pfx"
			],
			[
				"Hook",
				"KeyboardHook"
			],
			[
				"Hoo",
				"HookStop"
			],
			[
				"Ho",
				"HookStart"
			],
			[
				"int",
				"Int32"
			],
			[
				"PlaySoun",
				"PlaySoundFlags"
			],
			[
				"O",
				"OpenFileDialog"
			],
			[
				"From",
				"Form1_Load"
			],
			[
				"Form1",
				"Form1_Load"
			],
			[
				"Do",
				"DoWorkStatic"
			],
			[
				"S",
				"Singletons"
			],
			[
				"Test",
				"TestClass"
			],
			[
				"_",
				"_count"
			],
			[
				"Con",
				"Contacts"
			],
			[
				"up",
				"upperCase"
			],
			[
				"cli",
				"on_button_clicked"
			],
			[
				"height",
				"max-height\tproperty"
			],
			[
				"so",
				"socket.io-client"
			],
			[
				"En",
				"EncodeToString\tfunc(src []byte) string ·ƒ"
			],
			[
				"st",
				"StdEncoding\t*base64.Encoding ·ν"
			],
			[
				"Engin",
				"EngineioMessage\tfunc(text string) ·ƒ"
			],
			[
				"EIO",
				"EIO_Message\tEngineioPacket ·Ɩ"
			],
			[
				"SIO_Bin",
				"SIO_Binary_Event\tSocketioPacket ·Ɩ"
			],
			[
				"SIO",
				"SIO_Event\tSocketioPacket ·Ɩ"
			],
			[
				"U",
				"Uint16\tfunc(b []byte) uint16 ·ƒ"
			],
			[
				"Error",
				"ErrorNil\tErrorCode ·Ɩ"
			],
			[
				"Err",
				"ErrorNil\tErrorCode ·Ɩ"
			],
			[
				"Messa",
				"MessageType\tbyte ·ʈ"
			],
			[
				"E",
				"Err\terror ·ν"
			],
			[
				"e",
				"Err\terror ·ν"
			],
			[
				"b",
				"brw\t*bufio.ReadWriter ·ν"
			],
			[
				"Mi",
				"Millisecond\ttime.Duration ·Ɩ"
			],
			[
				"Webs",
				"github.com/gorilla/websocket\t ·ʂ"
			],
			[
				"Set",
				"SetReadDeadline\tfunc(t time.Time) error ·ƒ"
			],
			[
				"B",
				"BrokenMessage\tMessageType ·Ɩ"
			],
			[
				"R",
				"RemoteAddr\tfunc() net.Addr ·ƒ"
			],
			[
				"P",
				"parsed\tbool ·ν"
			],
			[
				"utf",
				"unicode/utf8\t ·ʂ"
			],
			[
				"Mask",
				"Masking\tbool ·ν"
			],
			[
				"Mess",
				"MessageType\tbyte ·ʈ"
			],
			[
				"Ma",
				"Maskingkey\t[4]byte ·ν"
			],
			[
				"Masking",
				"Masking\tbool ·ν"
			],
			[
				"M",
				"Maskingkey\t[4]byte ·ν"
			],
			[
				"CloseMe",
				"CloseMessageCode\tuint ·ʈ"
			],
			[
				"Ti",
				"PingTimeout\ttime.Duration ·Ɩ"
			],
			[
				"Ping",
				"PingTimeout\ttime.Duration ·Ɩ"
			],
			[
				"r",
				"SetReadDeadline\tfunc(t time.Time) error ·ƒ"
			],
			[
				"Read",
				"ReadWriter\tstruct ·ʈ"
			],
			[
				"StatusIn",
				"StatusInternalServerError\tuntyped int ·Ɩ"
			],
			[
				"net",
				"netConn\tnet.Conn ·ν"
			],
			[
				"enc",
				"encoding/base64\t ·ʂ"
			],
			[
				"Re",
				"RequestURI\tstring ·ν"
			],
			[
				"Respn",
				"ResponseWriter\tinterface ·ʈ"
			],
			[
				"Ha",
				"Handler\tinterface ·ʈ"
			],
			[
				"L",
				"GetLabel\tfunc() string ·ƒ"
			],
			[
				"test",
				"test_pb.js"
			],
			[
				"react",
				"react-quill/"
			],
			[
				"el",
				"element-ui/"
			],
			[
				"rel",
				"icedesign-qrcode.rel.js"
			],
			[
				"get",
				"getCroppedCanvas\twarning"
			],
			[
				"cl",
				"className"
			],
			[
				"hex",
				"hex2decimal"
			],
			[
				"flex",
				"flex-wrap\tproperty"
			],
			[
				"in",
				"MarshalIndent\tfunc(v interface{}, prefix string, indent string) []byte, error ·ƒ"
			],
			[
				"io",
				"io/ioutil\t ·ʂ"
			],
			[
				"re",
				"ReadDir\tfunc(dirname string) []os.FileInfo, error ·ƒ"
			],
			[
				"init",
				"initQueue"
			],
			[
				"thread",
				"threadID"
			],
			[
				"exit",
				"exitFlag"
			],
			[
				"content",
				"content_length"
			],
			[
				"name",
				"nameKey"
			],
			[
				"work",
				"workQueue"
			],
			[
				"en",
				"enqueue"
			],
			[
				"none",
				"None"
			],
			[
				"Mo",
				"ModeExclusive\tos.FileMode ·Ɩ"
			],
			[
				"encod",
				"encoding/json\t ·ʂ"
			],
			[
				"Cmd",
				"Command\tfunc(name string, arg ...string) *exec.Cmd ·ƒ"
			],
			[
				"next",
				"next.min.js"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/douyin/douyin.ts",
			"settings":
			{
				"buffer_size": 25068,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					29,
					1,
					"toggle_comment",
					{
						"block": false
					},
					"AQAAAFoYAAAAAAAAXRgAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAABhGAAAAAAAAF4YAAAAAAAAAAAAAAAA8L8"
				]
			]
		},
		{
			"file": "src/douyin/h5.ts",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					37,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS0JwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAUCwAAAAAAAAkLAAAAAAAAAAAAAAAA8L8"
				],
				[
					42,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS0VwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					43,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS0dwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					44,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS0hwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					45,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS0xwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					46,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS01wIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					47,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS05wIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					48,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS09wIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					49,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS1hwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					50,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS1lwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					51,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS1pwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					52,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS2JwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					53,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS2NwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					54,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS2twIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					55,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS2xwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					56,
					1,
					"revert",
					null,
					"CAAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS25wIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAAAAAAAAAAAAOAQAAAAAAAAAAAAAAAAAAAAAAAA4BAAAAAAAAAAAAAAAAAAAAAAAADgEAAAAAAAAAAAAAAAAAAAAAAAAOAQAAAAAAAAAAAAAAAAAAAAAAAA4BAAAAAAAAAAAAAAAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"CwAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					1,
					1,
					"revert",
					null,
					"AgAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS3RwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				],
				[
					2,
					1,
					"revert",
					null,
					"BQAAAAAAAAAAAAAAAAAAAAAAAADmEAAAaW1wb3J0IHsgV2VidmlldyB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3gvd2Vidmlld0AwLjUuNi9tb2QudHMiOwppbXBvcnQgeyBqb2luLCBkaXJuYW1lLCBmcm9tRmlsZVVybCB9IGZyb20gImh0dHBzOi8vZGVuby5sYW5kL3N0ZEAwLjk1LjAvcGF0aC9tb2QudHMiOwppbXBvcnQgRG91eWluLCB7IFNoYXJlSXRlbSwgVmlkZW9JbmZvLCBJdGVtSW5mbywgQ291bnRlciB9IGZyb20gIi4vZG91eWluLnRzIjsKCmxldCBTY3JpcHREaXIgPSBkaXJuYW1lKGZyb21GaWxlVXJsKERlbm8ubWFpbk1vZHVsZSkpCgpsZXQgaHRtbCA9IGAKICA8aHRtbD4KICA8Ym9keSBzdHlsZT0icG9zaXRpb246YWJzb2x1dGU7IHRvcDotMTJweDsiPgogICAgPGJ1dHRvbiBvbmNsaWNrPSJleHRlcm5hbC5pbnZva2UoJ0VuZCcpIj5FbmQ8L2J1dHRvbj4KICAgIDxidXR0b24gb25jbGljaz0iZXh0ZXJuYWwuaW52b2tlKCd0ZXN0JykiPnRlc3Q8L2J1dHRvbj4KICAgIDxzY3JpcHQ+CiAgICAgIGZ1bmN0aW9uIHRlc3QoKSB7IGV4dGVybmFsLmludm9rZSgiZmluaXNoIik7IH0KICAgIDwvc2NyaXB0PgogIDwvYm9keT4KICA8L2h0bWw+CmA7Cgpjb25zdCBidWZmZXIgPSBEZW5vLnJlYWRGaWxlU3luYyhqb2luKFNjcmlwdERpciwgInZpZGVvcy5odG1sIikpOwpodG1sID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWZmZXIpOwpjb25zb2xlLmVycm9yKCJsb2FkIHBhZ2UiLCBodG1sLnNwbGl0KCJcbiIpLnNoaWZ0KCkpOwoKY29uc3Qgd2VidmlldzpXZWJ2aWV3ID0gbmV3IFdlYnZpZXcoCiAgeyAKICAgIC8vIHRpdGxlOiBzdHJpbmc7CiAgICAvLyB1cmw6IHN0cmluZzsKICAgIHdpZHRoOiA1MjAsCiAgICBoZWlnaHQ6IDk2MCwKICAgIC8vIG1pbldpZHRoOiBudW1iZXI7CiAgICAvLyBtaW5IZWlnaHQ6IG51bWJlcjsKICAgIC8vIHJlc2l6YWJsZTogYm9vbGVhbjsKICAgIGRlYnVnOiB0cnVlLAogICAgLy8gdmlzaWJsZTogYm9vbGVhbjsgIAogICAgLy8gZnJhbWVsZXNzOiB0cnVlLAogICAgdXJsOiBgZGF0YTp0ZXh0L2h0bWwsJHtlbmNvZGVVUklDb21wb25lbnQoaHRtbCl9YAogICAgLy8gdXJsOiAiaHR0cDovL2xvY2FsaG9zdC8iCiAgICAvLyB1cmw6ICJodHRwczovL3d3dy56bGliLm5ldC9jcmNfdjMudHh0IgogICAgLy8gdXJsOiAiaHR0cHM6Ly9jbi5iaW5nLmNvbS8iCiAgfSwKKTsKCmxldCBkeSA9IG5ldyBEb3V5aW4oKTsKbGV0IHBhZ2UgPSBwYXJzZUludChEZW5vLmFyZ3NbMF0pOwpsZXQgZnJvbSA9IERlbm8uYXJnc1sxXTsKCmxldCBmYXZvcml0ZSA9IGF3YWl0IGR5LnVwZGF0ZVNjYW5MaXN0KFtdKTsKbGV0IHNjYW5MaXN0OlNoYXJlSXRlbVtdID0gW107CmxldCBmcm9tZmlsZSA9IERlbm8uYXJnc1swXT09ImZyb21maWxlIjsKaWYoIGZyb21maWxlICl7CiAgbGV0IGZpbGUgPSBEZW5vLmFyZ3NbMV07CiAgbGV0IHR4dCA9IERlbm8ucmVhZFRleHRGaWxlU3luYyhmaWxlKTsKICBsZXQgbGlzdCA9IEpTT04ucGFyc2UodHh0KTsKICBzY2FuTGlzdCA9IHNjYW5MaXN0LmNvbmNhdCguLi5saXN0KTsKICBjb25zb2xlLmxvZygibG9hZCBzY2FubGlzdCIsIHNjYW5MaXN0Lmxlbmd0aCwgbGlzdC5sZW5ndGgpOwp9CgppZighcGFnZSkgcGFnZSA9IDYyOwppZighZnJvbSB8fCBmcm9tZmlsZSkgZnJvbSA9ICJlbVBvS3ZwIjsgLy8gZWtYSkhrbTogRE9OJ1QgQ0hBTkdFIFRISVMgTElORQoKZnVuY3Rpb24gdXBkYXRlU2VsZigpewogIGxldCBwYXRoID0gam9pbihTY3JpcHREaXIsICJoNS50cyIpOwogIGxldCBidWYgPSBEZW5vLnJlYWRGaWxlU3luYyhwYXRoKTsKICBsZXQgc2NyaXB0ID0gbmV3IFRleHREZWNvZGVyKCJ1dGYtOCIpLmRlY29kZShidWYpOwogIHNjcmlwdCA9IHNjcmlwdC5yZXBsYWNlKC8iLitET04nVCBDSEFOR0UvLCBgIiR7ZnJvbX0iOyAvLyBla1hKSGttOiBET04nVCBDSEFOR0VgKTsKICBEZW5vLndyaXRlRmlsZVN5bmMocGF0aCwgbmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHNjcmlwdCkpOwp9CgpsZXQgY291bnRlciA9IG5ldyBDb3VudGVyKGZyb20pOwpsZXQgaXRlbXM6IFNoYXJlSXRlbVtdID0gW107CmxldCBsYXN0RXZlbnQgPSAiIjsKCi8vIGZvciBhd2FpdCAoY29uc3QgZXZlbnQgb2Ygd2Vidmlldy5pdGVyKCkpIHsg44CC44CCIH0Kd2Vidmlldy5ydW4oKGV2ZW50OiBzdHJpbmcpID0+IHsKICBpZihsYXN0RXZlbnQgPT09IGV2ZW50KSByZXR1cm47CiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICBsYXN0RXZlbnQgPSAiIjsKICB9LCAyMDApOwogIGNvbnNvbGUuZXJyb3IoIuKakSIsIGV2ZW50KTsKICBsYXN0RXZlbnQgPSBldmVudDsKICBpZihldmVudC5zdGFydHNXaXRoKCJmZXRjaF92aWRlb3wiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoInwiKVsxXTsKICAgIGR5LmZldGNoSXRlbSh1cmwpLnRoZW4oKGpzb246IEl0ZW1JbmZvfHZvaWQpPT57CiAgICAgIGpzb24gJiYgd2Vidmlldy5ldmFsKGBmZXRjaF92aWRlb19jYigke0pTT04uc3RyaW5naWZ5KGpzb24pfSlgKQogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImFkZF9mYXZvcml0ZXwiKSl7CiAgICBsZXQgZnJvbSA9IGV2ZW50LnNwbGl0KCJ8IilbMV0uc3BsaXQoIi8iKS5zcGxpY2UoLTIpWzBdOwogICAgZnJvbSAmJiBkeS5zY2FuRmF2b3JpdGVMaXN0KFtmcm9tXSkudGhlbihpdCA9PiB7CiAgICAgIHdlYnZpZXcuZXZhbChgYWRkX2Zhdm9yaXRlX2NiKCR7aXR9KWApOwogICAgfSk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZhdm9yaXRlfCIpKXsKICAgIGl0ZW1zID0gZmF2b3JpdGUuc3BsaWNlKDApOwogICAgd2Vidmlldy5ldmFsKGBmYXZvcml0ZV9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmKGV2ZW50LnN0YXJ0c1dpdGgoImZldGNoX2F3ZW1lfCIpKXsKICAgIGxldCBhd2VtZV9pZCA9IGV2ZW50LnNwbGl0KCJ8IilbMV07CiAgICBkeS5mZXRjaEl0ZW1CeUlkKGF3ZW1lX2lkKS50aGVuKChpdGVtOnZvaWR8SXRlbUluZm8pPT57CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfYXdlbWVfY2IoJHtKU09OLnN0cmluZ2lmeShpdGVtKX0pYCk7CiAgICB9KTsKICB9IGVsc2UgaWYoZXZlbnQuc3RhcnRzV2l0aCgiZmV0Y2hfaG9tZXwiKSl7CiAgICBsZXQgdXJsID0gZXZlbnQuc3BsaXQoJ3wnKVsxXTsKICAgIGxldCB0eXBlID0gZXZlbnQuc3BsaXQoJ3wnKVsyXSBhcyAoInBvc3QifCJsaWtlIik7CiAgICBkeS5mZXRjaEhvbWVMaXN0KHVybCwgdHlwZSkudGhlbigodmlkZW9zOlZpZGVvSW5mb1tdKSA9PnsKICAgICAgbGV0IGpzbiA9IEpTT04uc3RyaW5naWZ5KHZpZGVvcyk7CiAgICAgIHdlYnZpZXcuZXZhbChgZmV0Y2hfaG9tZV9jYigke2pzbn0pYCkKICAgIH0pCiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgc2Nhbkxpc3QubGVuZ3RoKSB7CiAgICBpdGVtcyA9IGl0ZW1zLmNvbmNhdCguLi5zY2FuTGlzdC5zcGxpY2UoMCwgMjQpKTsKICAgIGNvbnNvbGUuZXJyb3IoeyBpdGVtczogaXRlbXMubGVuZ3RoLCBzY2FuTGlzdDogc2Nhbkxpc3QubGVuZ3RofSk7CiAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgd2Vidmlldy5ldmFsKGBmZXRjaF9jYigke0pTT04uc3RyaW5naWZ5KGl0ZW1zKX0pYCk7CiAgfSBlbHNlIGlmICgiZmV0Y2h8IiA9PT0gZXZlbnQgJiYgIXNjYW5MaXN0Lmxlbmd0aCkgewogICAgLy8gZHkuc2NhblNoYXJlVVJMKHBhZ2UsIGZyb20pLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgIGR5LnNjYW5JblN1YnByb2NlKGZyb20sIHBhZ2UpLnRoZW4oKGxpc3Q6U2hhcmVJdGVtW10pID0+IHsKICAgICAgaXRlbXMgPSBpdGVtcy5jb25jYXQoLi4ubGlzdCk7CiAgICAgIGNvbnNvbGUuZXJyb3IoeyBmb3VuZDogbGlzdC5sZW5ndGgsIGZyb20sIGxpc3Q6IGl0ZW1zLmxlbmd0aCwgcGFnZX0pOwogICAgICBpZihpdGVtcy5sZW5ndGg+MjAwKSBpdGVtcy5zcGxpY2UoMCwgMjQpOwogICAgICB3ZWJ2aWV3LmV2YWwoYGZldGNoX2NiKCR7SlNPTi5zdHJpbmdpZnkoaXRlbXMpfSlgKTsKICAgICAgdXBkYXRlU2VsZigpOwogICAgfSkKICAgIGZyb20gPSBjb3VudGVyLmFkZChwYWdlKTsKICB9IGVsc2UgaWYgKCJFbmQiID09PSBldmVudCkgewogICAgICB3ZWJ2aWV3LmRyb3AoKTsKICB9IGVsc2UgaWYgKCJ0ZXN0IiA9PT0gZXZlbnQpIHsKICAgICAgY29uc29sZS50aW1lKCk7CiAgICAgIHdlYnZpZXcuZXZhbCgidGVzdCgpOyIpOwogIH0gZWxzZSBpZiAoImZpbmlzaCIgPT09IGV2ZW50KSB7CiAgICAgIGNvbnNvbGUudGltZUVuZCgpOwogIH0KfSk7CgoKAAAAAAAAAADgEAAAAAAAAAAAAAAAAAAAAAAAAOAQAAAAAAAAAAAAAAAAAAAAAAAA4BAAAAAAAAAAAAAAAAAAAAAAAADgEAAAAAAAAAAAAAA",
					"BQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8L8AAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADwvwAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/AAAAAAEAAAAAAAAAAAAAAPYKAAAAAAAAAAAAAAAA8L8"
				]
			]
		}
	],
	"build_system": "Packages/User/Node.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Flow/Flow.sublime-build",
					""
				],
				[
					"Packages/TypeScript/TypeScript.sublime-build",
					""
				],
				[
					"Packages/User/Node.sublime-build",
					""
				],
				[
					"Packages/User/Node.sublime-build",
					"Node ESM(.mjs)"
				],
				[
					"Packages/User/Node.sublime-build",
					"TypeScript Deno"
				],
				[
					"Packages/User/Node.sublime-build",
					"TypeScript ts-node"
				],
				[
					"Packages/User/Node.sublime-build",
					"TypeScript Watch"
				],
				[
					"Packages/User/Node.sublime-build",
					"TypeScript => ES3"
				],
				[
					"Packages/User/Node.sublime-build",
					"TypeScript => ES5"
				],
				[
					"Packages/User/Node.sublime-build",
					"TypeScript => ES6"
				],
				[
					"Packages/User/Node.sublime-build",
					"ES6(ECMAScript 2015)"
				],
				[
					"Packages/User/Node.sublime-build",
					"ES5(ECMAScript 2009)"
				]
			],
			[
				"Packages/User/Node.sublime-build",
				"TypeScript Deno"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"rena",
				"Rename File"
			],
			[
				"renae",
				"Rename File"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"preview",
				"Markdown Preview: Preview in Browser"
			],
			[
				"save pro",
				"Project: Save As"
			],
			[
				"enable",
				"Table Editor: Enable for current view"
			],
			[
				"Enable vie",
				"Table Editor: Enable for current view"
			],
			[
				"previ",
				"Markdown Preview: Preview in Browser"
			],
			[
				"re",
				"Rename File"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"push",
				"Git: Push Current Branch"
			],
			[
				"com",
				"Git: Commit"
			],
			[
				"add",
				"Git: Add All"
			],
			[
				"live",
				"MarkdownLivePreview: Open Preview"
			],
			[
				"emmet",
				"Emmet: Evaluate Math Expression"
			],
			[
				"ex",
				"Emmet: Expand Abbreviation"
			],
			[
				"Package Control: up",
				"Package Control: List Unmanaged Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"dis",
				"Package Control: Disable Package"
			],
			[
				"enablep",
				"Package Control: Enable Package"
			],
			[
				"comm",
				"Git: Commit"
			],
			[
				"status",
				"Git: Status"
			],
			[
				"pus",
				"Git: Push Current Branch"
			],
			[
				"git add",
				"Git: Add All"
			],
			[
				"up",
				"Package Control: Upgrade Package"
			],
			[
				"math",
				"Emmet: Evaluate Math Expression"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"mat",
				"Emmet: Evaluate Math Expression"
			],
			[
				"matth",
				"Emmet: Evaluate Math Expression"
			],
			[
				"en",
				"Package Control: Enable Package"
			],
			[
				"commit",
				"Git: Commit"
			],
			[
				"inc",
				"Emmet: Increment Number by 1"
			],
			[
				"ma",
				"Emmet: Evaluate Math Expression"
			],
			[
				"emmet ",
				"Emmet: Balance Inward"
			],
			[
				"emmet in",
				"Emmet: Capture Abbreviation"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"endable ",
				"Table Editor: Enable for current syntax"
			],
			[
				" Math  ",
				"HTMLPrettify: Set `node` Path"
			],
			[
				"add rep",
				"Package Control: Add Repository"
			],
			[
				"enable p",
				"Package Control: Enable Package"
			],
			[
				"emm",
				"Preferences: Emmet Key Bindings"
			],
			[
				"git:lo",
				"Git: Log All"
			],
			[
				"edit",
				"Project: Edit Project"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"rename",
				"Rename File"
			],
			[
				"theme",
				"UI: Select Color Scheme"
			],
			[
				"co",
				"Git: Commit"
			],
			[
				"disable\t",
				"Package Control: Disable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"pu",
				"Git: Push Current Branch"
			],
			[
				"git",
				"Git: Add All"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"selection",
				"Rot13 Selection"
			],
			[
				"ren",
				"Rename File"
			],
			[
				"uniq",
				"Permute Lines: Unique"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"reane",
				"Rename File"
			],
			[
				"gitadd",
				"Git: Add All"
			],
			[
				"emmet:",
				"Emmet: Expand Abbreviation"
			],
			[
				"disable ",
				"Package Control: Disable Package"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"enable cur",
				"Table Editor: Enable for current view"
			],
			[
				"pushc",
				"Git: Push Current Branch"
			],
			[
				"stat",
				"Git: Status"
			],
			[
				"table edit",
				"Table Editor: Enable for current view"
			],
			[
				"table",
				"Table Editor: Show demo film in new scratch view"
			],
			[
				"previe",
				"Markdown Preview: Preview in Browser"
			],
			[
				"markown",
				"Markdown Preview: Preview in Browser"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"endable",
				"Package Control: Disable Package"
			],
			[
				"enabl",
				"Package Control: Enable Package"
			],
			[
				"la",
				"LaTeXTools: Clear cache"
			],
			[
				"html",
				"HTMLPrettify"
			],
			[
				"erlang",
				"Set Syntax: Erlang"
			],
			[
				"diff",
				"Set Syntax: Diff"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"utf",
				"ConvertToUTF8: Reload with Encoding"
			],
			[
				"TypesCript",
				"TypeScript: Signature Info"
			],
			[
				"markdown",
				"Set Syntax: MultiMarkdown"
			],
			[
				"debug",
				"SublimeCodeIntel: Enable Debug Mode"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"them",
				"UI: Select Theme"
			],
			[
				"new pro",
				"Project Manager: Add New Project"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 237.0,
		"history":
		[
			"r = os.system(\"cmd /k echo >>c:/coding/md/log.txt\")",
			"r = os.system(\"cmd /k \\\"echo c:/coding/md/log.txt mkdir c:\\mkdir\\\"\")",
			"r = os.system(\"cmd /k echo \\\"c:/coding/md/log.txt mkdir c:\\mkdir\\\"\")",
			"r = os.system(\"cmd /k echo c:/coding/md/log.txt mkdir c:\\mkdir'\")",
			"r = os.system(\"cmd /k 'echo c:/coding/md/log.txt mkdir c:\\mkdir'\")",
			"r = os.system(\"cmd -k echo c:/coding/md/log.txt mkdir c:\\mkdir\")",
			"r = os.system(\"echo c:/coding/md/log.txt mkdir c:\\mkdir\")",
			"r = os.system(\"echo c:/log.txt mkdir c:\\mkdir\")",
			"r = os.system(\"echo c:\\\\log.txt mkdir c:\\mkdir\")",
			"r = os.system(\"mkdir c:\\mkdir\")",
			"r = os.system(\"cwd .\")",
			"print(r)",
			"r = os.system(\"dir .\")",
			"print(r)",
			"pring(r)",
			"r = os.system(\"dir\")",
			"os.system(\"dir\")",
			"subprocess.run(\"ls\")",
			"subprocess.run()",
			"import subprocess",
			"subprocess.run()",
			"import commands",
			"for i in val.readlines()",
			"for i in val.readlines(): &  print(i)",
			"for i in val.readlines()  print(i)",
			"for i in val.readlines(): print(i)",
			"for i in val.readlines():",
			"val = os.popen('ls -al')",
			"val = os.ppopen('ls -al')",
			"val = os.Ppopen('ls -al')",
			"import os",
			"val = os.Ppopen('ls -al')",
			"cwd"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/coding/md-code/deno/demos",
		"/C/coding/md-code/deno/demos/src",
		"/C/coding/md-code/deno/demos/src/douyin"
	],
	"file_history":
	[
		"/C/coding/md-code/deno/demos/src/douyin/posts.txt",
		"/C/coding/md-code/deno/demos/src/douyin/favorite.json",
		"/C/Users/OCEAN/Videos/videos-fav/yoyo110110110-6958789848215997696.json",
		"/C/Users/OCEAN/Videos/scan-ekXJhyn.json",
		"/C/coding/md-code/rust/demos/v.json",
		"/C/coding/md-code/rust/demos/note.txt",
		"/C/coding/md-code/rust/demos/mm.txt",
		"/C/coding/md-code/rust/amethyst/README.md",
		"/C/coding/md-code/deno/demos/deno_src/docs/toc.json",
		"/C/coding/md-code/deno/demos/deno_src/cli/dts/lib.deno.unstable.d.ts",
		"/C/coding/md-code/deno/demos/deno_src/cli/dts/lib.deno.ns.d.ts",
		"/C/coding/md-code/deno/demo/douyin.ts",
		"/C/coding/md-code/deno/std@0.90.0/path/posix.ts",
		"/C/coding/md-code/deno/deno_src/core/bindings.rs",
		"/C/coding/md-code/deno/deno_src/docs/typescript/runtime.md",
		"/C/coding/md-code/deno/demo/cache.ts",
		"/C/coding/md-code/deno/deno_src/core/Cargo.toml",
		"/C/coding/md-code/deno/deno_src/cli/tsc/compiler.d.ts",
		"/C/coding/md-code/deno/deno_src/core/runtime.rs",
		"/C/coding/md-code/deno/deno_src/docs/tools/compiler.md",
		"/C/coding/md-code/deno/demo/flags.ts",
		"/C/coding/md-code/deno/deno_src/cli/dts/lib.deno.window.d.ts",
		"/C/coding/md-code/deno/deno_src/runtime/ops/process.rs",
		"/C/coding/md-code/deno/deno_src/cli/dts/lib.dom.d.ts",
		"/C/coding/md-code/deno/webview_deno/examples/perf.ts",
		"/C/coding/md-code/deno/deno_src/core/lib.deno_core.d.ts",
		"/C/coding/md-code/deno/deno_src/core/core.js",
		"/C/coding/md-code/deno/deno_src/cli/tsc/99_main_compiler.js",
		"/C/coding/md-code/deno/deno_src/cli/tests/unit/dispatch_json_test.js",
		"/C/coding/md-code/deno/deno_src/cli/program_state.rs",
		"/C/coding/md-code/deno/webview/README.md",
		"/C/coding/md-code/deno/cms-strapi/node_modules/@apollo/protobufjs/node_modules/@types/node/path.d.ts",
		"/C/coding/md-code/deno/deno_src/runtime/ops/signal.rs",
		"/C/coding/md-code/deno/node/signature.js",
		"/C/coding/md-code/deno/videos/lin520lin6-6940623256831495460.json",
		"/C/coding/md-code/deno/videos-2/1157428006-6953169225095613703-9637.mp4",
		"/C/coding/md-code/deno/videos-2/864053219-6951756545466060063-15092.jpg",
		"/C/coding/md-code/deno/videos/dycq99-6935391814916541708.json",
		"/C/coding/md-code/deno/videos/dycq99-6934198178556300555.json",
		"/C/coding/md-code/deno/videos/dycq99-6935985408920571140.json",
		"/C/coding/md-code/deno/node_modules/@types/react/index.d.ts",
		"/C/coding/md-code/deno/deno_src/test_util/std/path/posix.ts",
		"/C/coding/md-code/deno/cms-strapi/api/sigl/models/sigl.settings.json",
		"/C/coding/md-code/deno/videos/19991216i-6747585396877675790.json",
		"/C/coding/md-code/deno/cms-strapi/node_modules/strapi-plugin-users-permissions/documentation/1.0.0/overrides/users-permissions-Role.json",
		"/C/coding/md-code/deno/.gitignore",
		"/C/coding/md-code/deno/deno_src/docs/examples/subprocess.md",
		"/C/coding/md-code/deno/tsconfig.json",
		"/C/coding/md-code/deno/demo/gpu.ts",
		"/C/coding/md-code/deno/deno_doc/src/class.rs",
		"/C/coding/md-code/deno/deno_src/cli/dts/lib.deno.unstable.d.ts",
		"/C/coding/md-code/deno/deno_src/cli/tests/integration_tests.rs",
		"/C/coding/md-code/deno/deno_src/cli/flags.rs",
		"/C/coding/md-code/deno/deno_src/cli/dts/lib.es5.d.ts",
		"/C/coding/md-code/deno/deno_src/cli/dts/lib.deno.ns.d.ts",
		"/C/coding/md-code/deno/lib.deno.d.ts",
		"/C/coding/md-code/deno/deno_src/op_crates/crypto/01_crypto.js",
		"/C/Users/OCEAN/AppData/Roaming/Sublime Text 3/Packages/User/Node.sublime-build",
		"/C/coding/md-code/node-v12.18.3/deps/v8/tools/profview/index.html",
		"/C/coding/md-code/node-v12.18.3/doc/changelogs/CHANGELOG_V12.md",
		"/C/coding/md-code/node-v12.18.3/doc/changelogs/CHANGELOG_V012.md",
		"/C/coding/md-code/node-v12.18.3/benchmark/async_hooks/http-server.js",
		"/C/coding/md/go/golang.md",
		"/C/Users/OCEAN/AppData/Roaming/Sublime Text 3/Packages/User/GoLang.sublime-build",
		"/C/coding/md/webpack/deno.md",
		"/C/coding/md-code/coding/worker.js",
		"/C/coding/md-code/coding/deno.js",
		"/C/coding/md/c-daystep/readme_vue.md",
		"/C/coding/md/webpack/nestjs.md",
		"/C/coding/md/diagram.md",
		"/C/coding/md/writing/VirtualNes/the_force_Forth.md",
		"/C/coding/md/writing/cb/define_initialization_2.html",
		"/C/coding/md/c-daystep/readme.md",
		"/C/coding/md/java.md",
		"/C/coding/md/http/http_fiddler.md",
		"/C/coding/md/socket.io/go-my-websocket.md",
		"/C/coding/md/webpack/readme_css.md",
		"/C/coding/md/webpack/readme_es6.md",
		"/C/coding/md/readme_php.md",
		"/C/coding/md/webpack/nextjs.md",
		"/C/coding/md/SpringBoot.md",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/src/Loading.js",
		"/C/coding/md/rsa/readme_rsa.md",
		"/C/coding/md-code/bitcoin-master/Makefile.am",
		"/C/coding/md-code/blockchain-tutorial/README.md",
		"/C/coding/md/webpack/graphql.md",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/public/blockraw/150000.json",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/public/blockraw/2.json",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/public/blockraw/4.json",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/public/blockraw/3.json",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/public/blockraw/100000.json",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/public/blockraw/1.json",
		"/C/Users/OCEAN/AppData/Roaming/Sublime Text 3/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/C/coding/md/readme_git.md",
		"/C/coding/md/readme_curl.md",
		"/C/coding/md/readme_linux.md",
		"//wsl$/Ubuntu/home/jeango/arcblock/abt-blocklet-demo/.blocklet/release/blocklet.json",
		"/C/download/blocklet (1).json",
		"/C/coding/md/Readme2012/readme.js",
		"/C/Users/OCEAN/.ssh/id_rsa.pub",
		"/C/Users/OCEAN/AppData/Local/Yarn/Data/global/node_modules/@abtnode/cli/bin/abtnode.js",
		"/C/download/blocklet.json",
		"/C/coding/md-code/arcblock/react-demo-main/blocklet.yml",
		"/C/Users/OCEAN/AppData/Local/Temp/Rar$DIa12156.41727/打开获取资源的【解压密码】.txt",
		"/C/coding/md-code/arcblock/react-demo-0.1.4/node_modules/blockchain-manager/package.json",
		"/C/download/package/build/service-worker.js",
		"/C/download/package/package.json",
		"/C/download/package/api/libs/hooks/pre-stop.js",
		"/C/Users/OCEAN/AppData/Local/Temp/Rar$DIa19652.42251/README.md",
		"//wsl$/ubuntu/home/jeango/.nvm/versions/node/v15.9.0/bin/abtnode",
		"/C/coding/md/OpenGL/Makefile.md",
		"/C/coding/md/OpenGL/ccpp.md",
		"/C/coding/md/db/mysql.md",
		"/C/coding/md/readme_win.md",
		"/C/coding/md-code/nest-demo/dist/main.js",
		"/C/coding/md/webpack/readme_ng.md",
		"/C/Users/OCEAN/AppData/Local/Temp/Rar$DIa15816.5701/README.md",
		"/C/iceWorks/react-motion-master/demos/demo0-simple-transition/Demo.jsx",
		"/C/coding/md-code/coding/demo.html",
		"/C/coding/md-code/coding/deno.ts",
		"/C/coding/md/webpack/readme_ts.md",
		"/C/Users/OCEAN/AppData/Local/Temp/Rar$DIa12904.15079/Readme.txt",
		"/C/Users/OCEAN/AppData/Local/Temp/Rar$DIa12904.18111/Readme.txt",
		"/C/coding/md/webpack/node.md",
		"/C/coding/md/OpenToonz/Blender.md",
		"/C/coding/md/Erlang.md",
		"/C/coding/md/opengl/svg.md",
		"/C/coding/md/accme.md"
	],
	"find":
	{
		"height": 22.0
	},
	"find_in_files":
	{
		"height": 451.0,
		"where_history":
		[
			"",
			"C:\\coding\\md-code\\deno\\demo",
			"C:\\coding\\md-code\\deno\\deno_src\\cli",
			"C:\\coding\\md-code\\deno\\deno_src\\core",
			"C:\\coding\\md-code\\deno\\deno_src\\cli",
			"C:\\coding\\md-code\\deno\\deno_src\\cli\\dts",
			"C:\\coding\\md-code\\deno\\deno_src",
			"C:\\coding\\md-code\\deno\\deno_src\\runtime",
			"C:\\coding\\md-code\\deno\\rusty_v8",
			"C:\\coding\\md-code\\deno\\deno_src",
			"C:\\coding\\md-code\\deno\\videos",
			"C:\\coding\\md-code\\deno\\node_modules",
			"C:\\coding\\md-code\\deno\\deno_src"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"992Xia",
			"陈大",
			"大青",
			"浮",
			"浮标",
			"    \"uid\": \"S6858098\",\n",
			"    \"type\": \"user\",\n",
			"fetch_aweme_fb",
			"libquickjs.lto.a",
			"libquickjs",
			"libquickjs.lto.a",
			"UnixConnectOptions",
			"build",
			"▲",
			"mainModu",
			"dir",
			"queueMicrotask",
			"prompt",
			"registerErrorClass",
			"ops()",
			"core",
			"denoMain",
			"let mut locker = v8::Locker::new(&isolate);",
			"isolate::Isolate",
			"Isolate",
			"isolate",
			"Isolate",
			"Deno 系统内的 Isolate",
			"fn webview_",
			"enum ",
			"SIGINT",
			"This method is the shorthand for",
			"export function",
			"19991216i",
			":7197",
			"MXM",
			"global.d.ts",
			"6952791108132801828",
			"('gr$Daten Иb/s!l y͒yĹg,(lfi~ah`{mv,-n|jqewVxp{rvmmx,&effkx[!cs\"l\".Pq%widthl\"@q&heightl\"vr*getContextx$\"2d[!cs#l#,*;?|u.|uc{uq$fontl#vr(fillTextx$$龘ฑภ경2<[#c}l#2q*shadowBlurl#1q-shadowOffsetXl#$$limeq+shadowColorl#vr#arcx88802[%c}l#vr&strokex[ c}l\"v,)}eOmyoZB]mx[ cs!0s$l$Pb<k7l l!r&lengthb%^l$1+s$j\u0002l  s#i$1ek1s$gr#tack4)zgr#tac$! +0o![#cj?o ]!l$b%s\"o ]!l\"l$b*b^0d#>>>s!0s%yA0s\"l\"l!r&lengthb<k+l\"^l\"1+s\"j\u0005l  s&l&z0l!$ +[\"cs\\'(0l#i\\'1ps9wxb&s() &{s)/s(gr&Stringr,fromCharCodes)0s*yWl ._b&s o!])l l Jb<k$.aj;l .Tb<k$.gj/l .^b<k&i\"-4j!\u001f+& s+yPo!]+s!l!l Hd>&l!l Bd>&+l!l <d>&+l!l 6d>&+l!l &+ s,y=o!o!]/q\"13o!l q\"10o!],l 2d>& s.{s-yMo!o!]0q\"13o!]*Ld<l 4d#>>>b|s!o!l q\"10o!],l!& s/yIo!o!].q\"13o!],o!]*Jd<l 6d#>>>b|&o!]+l &+ s0l-l!&l-l!i\\'1z141z4b/@d<l\"b|&+l-l(l!b^&+l-l&zl\\'g,)gk}ejo{cm,)|yn~Lij~em[\"cl$b%@d<l&zl\\'l $ +[\"cl$b%b|&+l-l%8d<@b|l!b^&+ q$sign ',[Object.defineProperty(exports,'__esModule',{value:!0})])",
			"Function(function(t){return'\u0013e(e,a,r){\u0014(b[e]||(b[e]=t(\"x,y\",\"\u0014x \"+e+\" y\"\u0015)(r,a)}\u0013a(e,a,r){\u0014(k[r]||(k[r]=t(\"x,y\",\"\u0014new x[y](\"+Array(r+1).join(\",x[\u0016y]\")\u0017(1)+\")\"\u0015)(e,a)}\u0013r(e,a,r){\u0018n,t,s={},b=s.d=r?r.d+1:0;for(s[\"$\"+b]=s,t=0;t<b;t\u0016)s[n=\"$\"+t]=r[n];for(t=0,b=s\u0019=a\u0019;t<b;t\u0016)s[t]=a[t];\u0014c(e,0,s)}\u0013c(t,b,k){\u0013u(e){v[x\u0016]=e}\u0013f\u001a{\u0014g=\u0012,t\u0017ing(b\u001bg)}\u0013l\u001a{try{y=c(t,b,k)}catch(e){h=e,y=l}}for(\u0018h,y,d,g,v=[],x=0;;)switch(g=\u0012){case 1:u(!\u0011)\u001c4:\u0010f\u001a\u001c5:u(\u0013(e){\u0018a=0,r=e\u0019;\u0014\u0013\u001a{\u0018c=a<r;\u0014c&&u(e[a\u0016]),c}}(\u0011\u0015\u001c6:y=\u0011,u(\u0011(y\u0015\u001c8:if(g=\u0012,l\u001a\u001bg,g=\u0012,y===c)b+=g;else if(y!==l)\u0014y\u001c9:\u0010c\u001c10:u(s(\u0011\u0015\u001c11:y=\u0011,u(\u0011+y)\u001c12:for(y=f\u001a,d=[],g=0;g<y\u0019;g\u0016)d[g]=y.charCodeAt(g)^g+y\u0019;u(String.fromCharCode.apply(null,d\u0015\u001c13:y=\u0011,h=delete \u0011[y]\u001c14:\u0010\u0012\u001c59:u((g=\u0012)?(y=x,v.slice(x-=g,y\u0015:[])\u001c61:u(\u0011[\u0012])\u001c62:g=\u0011,k[0]=65599*k[0]+k[1].charCodeAt(g)>>>0\u001c65:h=\u0011,y=\u0011,\u0011[y]=h\u001c66:u(e(t[b\u0016],\u0011,\u0011\u0015\u001c67:y=\u0011,d=\u0011,u((g=\u0011).x===c?r(g.y,y,k):g.apply(d,y\u0015\u001c68:u(e((g=t[b\u0016])<\"<\"?(b--,f\u001a):g+g,\u0011,\u0011\u0015\u001c70:u(!1)\u001c71:\u0010n\u001c72:\u0010+f\u001a\u001c73:u(parseInt(f\u001a,36\u0015\u001c75:if(\u0011){b\u0016\u001dcase 74:g=\u0012<<16>>16\u001bg\u001c76:u(k[\u0012])\u001c77:y=\u0011,u(\u0011[y])\u001c78:g=\u0012,u(a(v,x-=g+1,g\u0015\u001c79:g=\u0012,u(k[\"$\"+g])\u001c81:h=\u0011,\u0011[f\u001a]=h\u001c82:u(\u0011[f\u001a])\u001c83:h=\u0011,k[\u0012]=h\u001c84:\u0010!0\u001c85:\u0010void 0\u001c86:u(v[x-1])\u001c88:h=\u0011,y=\u0011,\u0010h,\u0010y\u001c89:u(\u0013\u001a{\u0013e\u001a{\u0014r(e.y,arguments,k)}\u0014e.y=f\u001a,e.x=c,e}\u001a)\u001c90:\u0010null\u001c91:\u0010h\u001c93:h=\u0011\u001c0:\u0014\u0011;default:u((g<<16>>16)-16)}}\u0018n=this,t=n.Function,s=Object.keys||\u0013(e){\u0018a={},r=0;for(\u0018c in e)a[r\u0016]=c;\u0014a\u0019=r,a},b={},k={};\u0014r'.replace(/[\u0010-\u001f]/g,function(m){return t[m.charCodeAt(0)&15]})}(\"v[x++]=\u0010v[--x]\u0010t.charCodeAt(b++)-32\u0010function \u0010return \u0010))\u0010++\u0010.substr\u0010var \u0010.length\u0010()\u0010,b+=\u0010;break;case \u0010;break}\".split(\"\u0010\"))",
			"Function(function(t){return'\u0013e(e,a,r){\u0014(b[e]||(b[e]=t(\"x,y\",\"\u0014x \"+e+\" y\"\u0015)(r,a)}\u0013a(e,a,r){\u0014(k[r]||(k[r]=t(\"x,y\",\"\u0014new x[y](\"+Array(r+1).join(\",x[\u0016y]\")\u0017(1)+\")\"\u0015)(e,a)}\u0013r(e,a,r){\u0018n,t,s={},b=s.d=r?r.d+1:0;for(s[\"$\"+b]=s,t=0;t<b;t\u0016)s[n=\"$\"+t]=r[n];for(t=0,b=s\u0019=a\u0019;t<b;t\u0016)s[t]=a[t];\u0014c(e,0,s)}\u0013c(t,b,k){\u0013u(e){v[x\u0016]=e}\u0013f\u001a{\u0014g=\u0012,t\u0017ing(b\u001bg)}\u0013l\u001a{try{y=c(t,b,k)}catch(e){h=e,y=l}}for(\u0018h,y,d,g,v=[],x=0;;)switch(g=\u0012){case 1:u(!\u0011)\u001c4:\u0010f\u001a\u001c5:u(\u0013(e){\u0018a=0,r=e\u0019;\u0014\u0013\u001a{\u0018c=a<r;\u0014c&&u(e[a\u0016]),c}}(\u0011\u0015\u001c6:y=\u0011,u(\u0011(y\u0015\u001c8:if(g=\u0012,l\u001a\u001bg,g=\u0012,y===c)b+=g;else if(y!==l)\u0014y\u001c9:\u0010c\u001c10:u(s(\u0011\u0015\u001c11:y=\u0011,u(\u0011+y)\u001c12:for(y=f\u001a,d=[],g=0;g<y\u0019;g\u0016)d[g]=y.charCodeAt(g)^g+y\u0019;u(String.fromCharCode.apply(null,d\u0015\u001c13:y=\u0011,h=delete \u0011[y]\u001c14:\u0010\u0012\u001c59:u((g=\u0012)?(y=x,v.slice(x-=g,y\u0015:[])\u001c61:u(\u0011[\u0012])\u001c62:g=\u0011,k[0]=65599*k[0]+k[1].charCodeAt(g)>>>0\u001c65:h=\u0011,y=\u0011,\u0011[y]=h\u001c66:u(e(t[b\u0016],\u0011,\u0011\u0015\u001c67:y=\u0011,d=\u0011,u((g=\u0011).x===c?r(g.y,y,k):g.apply(d,y\u0015\u001c68:u(e((g=t[b\u0016])<\"<\"?(b--,f\u001a):g+g,\u0011,\u0011\u0015\u001c70:u(!1)\u001c71:\u0010n\u001c72:\u0010+f\u001a\u001c73:u(parseInt(f\u001a,36\u0015\u001c75:if(\u0011){b\u0016\u001dcase 74:g=\u0012<<16>>16\u001bg\u001c76:u(k[\u0012])\u001c77:y=\u0011,u(\u0011[y])\u001c78:g=\u0012,u(a(v,x-=g+1,g\u0015\u001c79:g=\u0012,u(k[\"$\"+g])\u001c81:h=\u0011,\u0011[f\u001a]=h\u001c82:u(\u0011[f\u001a])\u001c83:h=\u0011,k[\u0012]=h\u001c84:\u0010!0\u001c85:\u0010void 0\u001c86:u(v[x-1])\u001c88:h=\u0011,y=\u0011,\u0010h,\u0010y\u001c89:u(\u0013\u001a{\u0013e\u001a{\u0014r(e.y,arguments,k)}\u0014e.y=f\u001a,e.x=c,e}\u001a)\u001c90:\u0010null\u001c91:\u0010h\u001c93:h=\u0011\u001c0:\u0014\u0011;default:u((g<<16>>16)-16)}}\u0018n=this,t=n.Function,s=Object.keys||\u0013(e){\u0018a={},r=0;for(\u0018c in e)a[r\u0016]=c;\u0014a\u0019=r,a},b={},k={};\u0014r'.replace(/[\u0010-\u001f]/g,function(m){return t[m.charCodeAt(0)&15]})}(\"v[x++]=\u0010v[--x]\u0010t.charCodeAt(b++)-32\u0010function \u0010return \u0010))\u0010++\u0010.substr\u0010var \u0010.length\u0010()\u0010,b+=\u0010;break;case \u0010;break}\"",
			"Function(function(t){return'\u0013e(e,a,r){\u0014(b[e]||(b[e]=t(\"x,y\",\"\u0014x \"+e+\" y\"\u0015)(r,a)}\u0013a(e,a,r){\u0014(k[r]||(k[r]=t(\"x,y\",\"\u0014new x[y](\"+Array(r+1).join(\",x[\u0016y]\")\u0017(1)+\")\"\u0015)(e,a)}\u0013r(e,a,r){\u0018n,t,s={},b=s.d=r?r.d+1:0;for(s[\"$\"+b]=s,t=0;t<b;t\u0016)s[n=\"$\"+t]=r[n];for(t=0,b=s\u0019=a\u0019;t<b;t\u0016)s[t]=a[t];\u0014c(e,0,s)}\u0013c(t,b,k){\u0013u(e){v[x\u0016]=e}\u0013f\u001a{\u0014g=\u0012,t\u0017ing(b\u001bg)}\u0013l\u001a{try{y=c(t,b,k)}catch(e){h=e,y=l}}for(\u0018h,y,d,g,v=[],x=0;;)switch(g=\u0012){case 1:u(!\u0011)\u001c4:\u0010f\u001a\u001c5:u(\u0013(e){\u0018a=0,r=e\u0019;\u0014\u0013\u001a{\u0018c=a<r;\u0014c&&u(e[a\u0016]),c}}(\u0011\u0015\u001c6:y=\u0011,u(\u0011(y\u0015\u001c8:if(g=\u0012,l\u001a\u001bg,g=\u0012,y===c)b+=g;else if(y!==l)\u0014y\u001c9:\u0010c\u001c10:u(s(\u0011\u0015\u001c11:y=\u0011,u(\u0011+y)\u001c12:for(y=f\u001a,d=[],g=0;g<y\u0019;g\u0016)d[g]=y.charCodeAt(g)^g+y\u0019;u(String.fromCharCode.apply(null,d\u0015\u001c13:y=\u0011,h=delete \u0011[y]\u001c14:\u0010\u0012\u001c59:u((g=\u0012)?(y=x,v.slice(x-=g,y\u0015:[])\u001c61:u(\u0011[\u0012])\u001c62:g=\u0011,k[0]=65599*k[0]+k[1].charCodeAt(g)>>>0\u001c65:h=\u0011,y=\u0011,\u0011[y]=h\u001c66:u(e(t[b\u0016],\u0011,\u0011\u0015\u001c67:y=\u0011,d=\u0011,u((g=\u0011).x===c?r(g.y,y,k):g.apply(d,y\u0015\u001c68:u(e((g=t[b\u0016])<\"<\"?(b--,f\u001a):g+g,\u0011,\u0011\u0015\u001c70:u(!1)\u001c71:\u0010n\u001c72:\u0010+f\u001a\u001c73:u(parseInt(f\u001a,36\u0015\u001c75:if(\u0011){b\u0016\u001dcase 74:g=\u0012<<16>>16\u001bg\u001c76:u(k[\u0012])\u001c77:y=\u0011,u(\u0011[y])\u001c78:g=\u0012,u(a(v,x-=g+1,g\u0015\u001c79:g=\u0012,u(k[\"$\"+g])\u001c81:h=\u0011,\u0011[f\u001a]=h\u001c82:u(\u0011[f\u001a])\u001c83:h=\u0011,k[\u0012]=h\u001c84:\u0010!0\u001c85:\u0010void 0\u001c86:u(v[x-1])\u001c88:h=\u0011,y=\u0011,\u0010h,\u0010y\u001c89:u(\u0013\u001a{\u0013e\u001a{\u0014r(e.y,arguments,k)}\u0014e.y=f\u001a,e.x=c,e}\u001a)\u001c90:\u0010null\u001c91:\u0010h\u001c93:h=\u0011\u001c0:\u0014\u0011;default:u((g<<16>>16)-16)}}\u0018n=this,t=n.Function,s=Object.keys||\u0013(e){\u0018a={},r=0;for(\u0018c in e)a[r\u0016]=c;\u0014a\u0019=r,a},b={},k={};\u0014r'.replace(/[\u0010-\u001f]/g,function(m){return t[m.charCodeAt(0)&15]})}",
			"function(t){return'\u0013e(e,a,r){\u0014(b[e]||(b[e]=t(\"x,y\",\"\u0014x \"+e+\" y\"\u0015)(r,a)}\u0013a(e,a,r){\u0014(k[r]||(k[r]=t(\"x,y\",\"\u0014new x[y](\"+Array(r+1).join(\",x[\u0016y]\")\u0017(1)+\")\"\u0015)(e,a)}\u0013r(e,a,r){\u0018n,t,s={},b=s.d=r?r.d+1:0;for(s[\"$\"+b]=s,t=0;t<b;t\u0016)s[n=\"$\"+t]=r[n];for(t=0,b=s\u0019=a\u0019;t<b;t\u0016)s[t]=a[t];\u0014c(e,0,s)}\u0013c(t,b,k){\u0013u(e){v[x\u0016]=e}\u0013f\u001a{\u0014g=\u0012,t\u0017ing(b\u001bg)}\u0013l\u001a{try{y=c(t,b,k)}catch(e){h=e,y=l}}for(\u0018h,y,d,g,v=[],x=0;;)switch(g=\u0012){case 1:u(!\u0011)\u001c4:\u0010f\u001a\u001c5:u(\u0013(e){\u0018a=0,r=e\u0019;\u0014\u0013\u001a{\u0018c=a<r;\u0014c&&u(e[a\u0016]),c}}(\u0011\u0015\u001c6:y=\u0011,u(\u0011(y\u0015\u001c8:if(g=\u0012,l\u001a\u001bg,g=\u0012,y===c)b+=g;else if(y!==l)\u0014y\u001c9:\u0010c\u001c10:u(s(\u0011\u0015\u001c11:y=\u0011,u(\u0011+y)\u001c12:for(y=f\u001a,d=[],g=0;g<y\u0019;g\u0016)d[g]=y.charCodeAt(g)^g+y\u0019;u(String.fromCharCode.apply(null,d\u0015\u001c13:y=\u0011,h=delete \u0011[y]\u001c14:\u0010\u0012\u001c59:u((g=\u0012)?(y=x,v.slice(x-=g,y\u0015:[])\u001c61:u(\u0011[\u0012])\u001c62:g=\u0011,k[0]=65599*k[0]+k[1].charCodeAt(g)>>>0\u001c65:h=\u0011,y=\u0011,\u0011[y]=h\u001c66:u(e(t[b\u0016],\u0011,\u0011\u0015\u001c67:y=\u0011,d=\u0011,u((g=\u0011).x===c?r(g.y,y,k):g.apply(d,y\u0015\u001c68:u(e((g=t[b\u0016])<\"<\"?(b--,f\u001a):g+g,\u0011,\u0011\u0015\u001c70:u(!1)\u001c71:\u0010n\u001c72:\u0010+f\u001a\u001c73:u(parseInt(f\u001a,36\u0015\u001c75:if(\u0011){b\u0016\u001dcase 74:g=\u0012<<16>>16\u001bg\u001c76:u(k[\u0012])\u001c77:y=\u0011,u(\u0011[y])\u001c78:g=\u0012,u(a(v,x-=g+1,g\u0015\u001c79:g=\u0012,u(k[\"$\"+g])\u001c81:h=\u0011,\u0011[f\u001a]=h\u001c82:u(\u0011[f\u001a])\u001c83:h=\u0011,k[\u0012]=h\u001c84:\u0010!0\u001c85:\u0010void 0\u001c86:u(v[x-1])\u001c88:h=\u0011,y=\u0011,\u0010h,\u0010y\u001c89:u(\u0013\u001a{\u0013e\u001a{\u0014r(e.y,arguments,k)}\u0014e.y=f\u001a,e.x=c,e}\u001a)\u001c90:\u0010null\u001c91:\u0010h\u001c93:h=\u0011\u001c0:\u0014\u0011;default:u((g<<16>>16)-16)}}\u0018n=this,t=n.Function,s=Object.keys||\u0013(e){\u0018a={},r=0;for(\u0018c in e)a[r\u0016]=c;\u0014a\u0019=r,a},b={},k={};\u0014r'.replace(/[\u0010-\u001f]/g,function(m){return t[m.charCodeAt(0)&15]})}(\"v[x++]=\u0010v[--x]\u0010t.charCodeAt(b++)-32\u0010function \u0010return \u0010))\u0010++\u0010.substr\u0010var \u0010.length\u0010()\u0010,b+=\u0010;break;case \u0010;break}\".split(\"\u0010\")))()",
			"function(t){return'\u0013e(e,a,r){\u0014(b[e]||(b[e]=t(\"x,y\",\"\u0014x \"+e+\" y\"\u0015)(r,a)}\u0013a(e,a,r){\u0014(k[r]||(k[r]=t(\"x,y\",\"\u0014new x[y](\"+Array(r+1).join(\",x[\u0016y]\")\u0017(1)+\")\"\u0015)(e,a)}\u0013r(e,a,r){\u0018n,t,s={},b=s.d=r?r.d+1:0;for(s[\"$\"+b]=s,t=0;t<b;t\u0016)s[n=\"$\"+t]=r[n];for(t=0,b=s\u0019=a\u0019;t<b;t\u0016)s[t]=a[t];\u0014c(e,0,s)}\u0013c(t,b,k){\u0013u(e){v[x\u0016]=e}\u0013f\u001a{\u0014g=\u0012,t\u0017ing(b\u001bg)}\u0013l\u001a{try{y=c(t,b,k)}catch(e){h=e,y=l}}for(\u0018h,y,d,g,v=[],x=0;;)switch(g=\u0012){case ",
			"[",
			"last",
			",",
			"compile(",
			"compile",
			"export class Process<T extends RunOptions = RunOptions> ",
			"Deno.run",
			"int ",
			"console"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": true,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/douyin/douyin.ts",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 25068,
						"regions":
						{
						},
						"selection":
						[
							[
								6244,
								6241
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 1923.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/douyin/h5.ts",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"is_init_dirty_state": false,
							"origin_encoding": "UTF-8",
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/TypeScript/TypeScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"typescript_plugin_format_options":
							{
								"convertTabsToSpaces": true,
								"indentSize": 2,
								"tabSize": 2
							},
							"use_tab_stops": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 153.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SFTP":
	{
		"height": 0.0
	},
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 350.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "deno.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"posts",
				"demos\\src\\douyin\\posts.txt"
			],
			[
				"compiler",
				"deno_src\\docs\\tools\\compiler.md"
			],
			[
				"",
				"deno_src\\runtime\\ops\\signal.rs"
			],
			[
				"signa",
				"deno_src\\runtime\\ops\\signal.rs"
			],
			[
				"posix.",
				"std@0.90.0\\path\\posix.ts"
			],
			[
				"6935391814916541708",
				"videos\\dycq99-6935391814916541708.json"
			],
			[
				"6935985408920571140",
				"videos\\dycq99-6935985408920571140.json"
			],
			[
				"sigl",
				"cms-strapi\\api\\sigl\\models\\sigl.settings.json"
			],
			[
				"sign",
				"node\\signature.js"
			],
			[
				"douy",
				"demo\\douyin.ts"
			],
			[
				"lib.dom.d.ts",
				"deno_src\\cli\\dts\\lib.dom.d.ts"
			],
			[
				"lib",
				"lib.deno.d.ts"
			],
			[
				"subprocess",
				"deno_src\\docs\\examples\\subprocess.md"
			],
			[
				"profview",
				"deps\\v8\\tools\\profview\\index.html"
			],
			[
				"_http_server",
				"lib\\_http_server.js"
			],
			[
				"http",
				"lib\\http.js"
			],
			[
				"cluster child",
				"lib\\internal\\cluster\\child.js"
			],
			[
				"clus",
				"lib\\cluster.js"
			],
			[
				"golang",
				"md\\go\\golang.md"
			],
			[
				"node",
				"md\\webpack\\node.md"
			],
			[
				"vue",
				"md\\c-daystep\\readme_vue.md"
			],
			[
				"di",
				"md\\diagram.md"
			],
			[
				"ccpp",
				"md\\OpenGL\\ccpp.md"
			],
			[
				"erlan",
				"md\\Erlang.md"
			],
			[
				"css",
				"md\\webpack\\readme_css.md"
			],
			[
				"readme.js",
				"md\\Readme2012\\readme.js"
			],
			[
				"es",
				"md\\webpack\\readme_es6.md"
			],
			[
				"goweb",
				"md\\socket.io\\go-my-websocket.md"
			],
			[
				"spring",
				"md\\SpringBoot.md"
			],
			[
				"ras",
				"md\\rsa\\readme_rsa.md"
			],
			[
				"next",
				"md\\webpack\\nextjs.md"
			],
			[
				"cur",
				"md\\readme_curl.md"
			],
			[
				"linux",
				"md\\readme_linux.md"
			],
			[
				"rsa",
				"md\\rsa\\readme_rsa.md"
			],
			[
				"git",
				"md\\readme_git.md"
			],
			[
				"blo",
				"md\\blockchain.md"
			],
			[
				"make",
				"md\\OpenGL\\Makefile.md"
			],
			[
				"win",
				"md\\readme_win.md"
			],
			[
				"mysql",
				"md\\db\\mysql.md"
			],
			[
				"ng.md",
				"md\\webpack\\readme_ng.md"
			],
			[
				"erlang",
				"md\\Erlang.md"
			],
			[
				"acc",
				"md\\accme.md"
			],
			[
				"linxu",
				"md\\readme_linux.md"
			],
			[
				"blender",
				"md\\OpenToonz\\Blender.md"
			],
			[
				"linea",
				"md\\OpenGL\\LinearAlgebra.md"
			],
			[
				"cpp.",
				"md\\ccpp.md"
			],
			[
				"alg",
				"md\\OpenGL\\LinearAlgebra.md"
			],
			[
				"sublime",
				"md\\readme_sublime.md"
			],
			[
				"html",
				"md\\etest.html"
			],
			[
				"coding.html",
				"md\\writing\\unicode\\coding.html"
			],
			[
				"node.",
				"md\\webpack\\node.md"
			],
			[
				"android",
				"md\\readme_android.md"
			],
			[
				"dart",
				"md\\dart-flutter\\dart-flutter.md"
			],
			[
				"es6",
				"md\\webpack\\readme_es6.md"
			],
			[
				"my",
				"md\\db\\mysql.md"
			],
			[
				"coding.js",
				"coding\\coding.js"
			],
			[
				"coding.ts",
				"coding\\coding.ts"
			],
			[
				"ts",
				"md\\webpack\\readme_ts.md"
			],
			[
				"rea",
				"md\\readme.md"
			],
			[
				"sub",
				"md\\readme_sublime.md"
			],
			[
				"react",
				"md\\webpack\\readme_react.md"
			],
			[
				"php",
				"md\\readme_php.md"
			],
			[
				"curl",
				"md\\readme_curl.md"
			],
			[
				"api",
				"md\\minis\\wxappApi3Action.class.php"
			],
			[
				"webpack",
				"md\\webpack\\readme_webpack.md"
			],
			[
				"sublime.",
				"md\\readme_sublime.md"
			],
			[
				"cod",
				"coding\\coding.py"
			],
			[
				"win.",
				"md\\readme_win.md"
			],
			[
				"webpac",
				"md\\webpack\\readme_webpack.md"
			],
			[
				"forex.html",
				"md\\forex.html"
			],
			[
				"webp",
				"md\\webpack\\readme_webpack.md"
			],
			[
				"codingphp",
				"coding\\coding.php"
			],
			[
				"test.h",
				"md\\writing\\random-test\\rand_test.html"
			],
			[
				"go",
				"md\\go\\golang.md"
			],
			[
				"action.",
				"md\\minis\\wxappApi3Action.class.php"
			],
			[
				"index.html",
				"md\\c-daystep\\index.html"
			],
			[
				"cpp.md",
				"md\\ccpp.md"
			],
			[
				"stm",
				"md\\STM\\STM32_Nucleo.md"
			],
			[
				"lua",
				"coding\\coding.lua"
			],
			[
				"coding.l",
				"coding\\coding.lisp"
			],
			[
				"coding",
				"coding\\coding.py"
			],
			[
				"git.",
				"md\\readme_git.md"
			],
			[
				"spa",
				"md\\c-daystep\\spa.html"
			],
			[
				"ts.",
				"md\\webpack\\readme_ts.md"
			],
			[
				".ts",
				"coding\\coding.ts"
			],
			[
				"readme.",
				"md\\readme.md"
			],
			[
				"index",
				"md\\c-daystep\\index.html"
			],
			[
				"java.md",
				"md\\readme_java.md"
			],
			[
				"bl",
				"md\\OpenToonz\\Blender.md"
			],
			[
				"mt",
				"md\\mtd\\mtd.py"
			],
			[
				"ff",
				"md\\OpenToonz\\ffmpeg.md"
			],
			[
				"re",
				"md\\readme.md"
			],
			[
				"redis",
				"md\\db\\redis.md"
			],
			[
				"opencv",
				"md\\OpenGL\\OpenCV.md"
			],
			[
				"cv",
				"md\\cv.md"
			],
			[
				"accme",
				"md\\accme.md"
			],
			[
				"read",
				"md\\readme.md"
			],
			[
				"ddos",
				"md\\DDOS.md"
			],
			[
				"echarts",
				"md\\echart\\readme_echarts.md"
			],
			[
				"gopl",
				"md\\go\\readme_gopl.md"
			],
			[
				"liN",
				"md\\OpenGL\\LinearAlgebra.md"
			],
			[
				"mongo",
				"md\\db\\readme.MongoDB.md"
			],
			[
				"mfc",
				"md\\writing\\mfc\\mfc.html"
			],
			[
				"dia",
				"md\\diagram.md"
			],
			[
				"ffme",
				"md\\OpenToonz\\ffmpeg.md"
			],
			[
				"readme",
				"md\\readme.md"
			],
			[
				"csharp",
				"md\\csharp.md"
			],
			[
				"bootsrap",
				"md\\readme_bootstrap.md"
			],
			[
				"net.md",
				"md\\readme_net.md"
			],
			[
				"hugo",
				"md\\writing\\hugo.md"
			],
			[
				"vim",
				"md\\vim\\readme_vim.md"
			],
			[
				"open",
				"md\\OpenGL\\OpenGL.md"
			],
			[
				"socket",
				"md\\socket.io\\go-my-websocket.md"
			],
			[
				"java",
				"User\\java.sublime-build"
			],
			[
				"m",
				"md\\writing\\mfc\\mfc.md"
			],
			[
				"rpc",
				"md\\socket.io\\gRPC_protobuf.md"
			],
			[
				"python",
				"md\\readme_python.md"
			],
			[
				"linu",
				"md\\readme_linux.md"
			],
			[
				"proto",
				"md\\socket.io\\Protocol Buffer.md"
			],
			[
				"go-",
				"md\\socket.io\\go-my-websocket.md"
			],
			[
				"block",
				"md\\blockchain.md"
			],
			[
				"Concurrency",
				"CPP-Concurrency-In-Action-2ed-2019-master\\README.md"
			],
			[
				"c",
				"md\\csharp.md"
			],
			[
				"gop",
				"md\\go\\readme_gopl.md"
			],
			[
				"ffm",
				"md\\OpenToonz\\ffmpeg.md"
			],
			[
				"ffmpg",
				"md\\OpenToonz\\ffmpeg.md"
			],
			[
				"coding.cpp",
				"coding\\coding.cpp"
			],
			[
				"css.md",
				"md\\webpack\\readme_css.md"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "deno",
		"selected_items":
		[
			[
				"deno",
				"C:\\coding\\md-code\\deno\\demos\\deno.sublime-project"
			],
			[
				"",
				"C:\\coding\\md-code\\deno\\deno_src\\deno.sublime-project"
			],
			[
				"node",
				"C:\\coding\\md-code\\node-v12.18.3\\node_v12.sublime-project"
			],
			[
				"ts",
				"C:\\Users\\OCEAN\\AppData\\Roaming\\Sublime Text 3\\Packages\\User\\Projects\\TypeScript.sublime-project"
			],
			[
				"boo",
				"C:\\coding\\md-code\\bootstrap-5.0\\bootstrap.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 69.0,
		"last_filter": "UnixConnectOptions",
		"selected_items":
		[
			[
				"UnixConnectOptions",
				"UnixConnectOptions"
			],
			[
				"registerErrorClass",
				"registerErrorClass"
			],
			[
				"alert",
				"alert"
			],
			[
				"IFile",
				"IFile"
			],
			[
				"core",
				"core"
			],
			[
				"SIGINT",
				"SIGINT"
			],
			[
				"deno",
				"Deno"
			],
			[
				"signals",
				"signals"
			],
			[
				"Deno",
				"Deno"
			],
			[
				"cwd",
				"cwd"
			],
			[
				"_listen2",
				"server._listen2(address, port, addressType, backlog, fd, flags)"
			],
			[
				"createTrackbar",
				"createTrackbar"
			],
			[
				"addWeighted",
				"addWeighted"
			],
			[
				"resize",
				"resize"
			],
			[
				"ApplicationViewer",
				"QmlApplicationViewer"
			],
			[
				"cuda_GpuMat",
				"cuda_GpuMat"
			],
			[
				"Function: element",
				"Function: element"
			],
			[
				"element",
				"Function: element"
			],
			[
				"spawn",
				"Function: spawn"
			],
			[
				"start_timer",
				"Function: start_timer"
			],
			[
				"ethr_atomic_read",
				"ethr_atomic_read"
			],
			[
				"erts_atomic64_read_nob",
				"erts_atomic64_read_nob"
			],
			[
				"now_",
				"now_0"
			],
			[
				"erl_start",
				"erl_start"
			],
			[
				"process_main",
				"process_main"
			],
			[
				"bs_init2",
				"Function: do_bs_init_2"
			],
			[
				"ErlSub",
				"ErlSubBin"
			],
			[
				"ProcBin",
				"ProcBin"
			],
			[
				"SMALL",
				"small"
			],
			[
				"Process",
				"Process"
			],
			[
				"TAG_PRIMARY_LIST",
				"TAG_PRIMARY_LIST"
			],
			[
				"ErlDrvEntry",
				"ErlDrvEntry"
			],
			[
				"driver_entry",
				"add_driver_entry"
			],
			[
				"driver_select",
				"driver_select"
			],
			[
				"ready_output",
				"ready_output"
			],
			[
				"main",
				"main"
			],
			[
				"AddSingleTon",
				"TryAddSingleton"
			]
		],
		"width": 713.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 246.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
